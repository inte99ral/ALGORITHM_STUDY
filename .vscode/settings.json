/*
 * ctrl + , 누르고 세팅에 적용하기
 */

/*
 * 자주 쓰는 확장 모음
 * Auto Rename Tag
 * Auto Close Tag
 * Live Server
 *
 * C/C++
 * C/C++ Extension Pack
 * C/C++ Themes
 * CMake
 * CMake Tools
 *
 * Code Runner
 *
 * Debugger for Java
 *
 * ES7+ React/Redux/React-Native snippets
 * ESLint
 *
 * Extension Pack for Java
 *
 * Git Graph
 * indent-rainbow
 * IntelliCode
 * IntelliCode API Usage Examples
 *
 * Java prettier formatter
 * Language Support for Java(TM) by Red Hat
 *
 * Markdown All in One
 * markdownlint
 *
 * Material Icon Theme
 *
 * Maven for Java
 *
 * Prettier - Code formatter
 * Prettier ESLint
 *
 * Project Manager for Java
 * Test Runner for Java
 *
 * TODO Highlight
 * vscode-styled-components
 * WSL
 */

{
  "files.associations": {
    "ostream": "cpp",
    "iosfwd": "cpp",
    "string": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "fstream": "cpp",
    "sstream": "cpp",
    "any": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "barrier": "cpp",
    "bit": "cpp",
    "*.tcc": "cpp",
    "bitset": "cpp",
    "cctype": "cpp",
    "cfenv": "cpp",
    "charconv": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "compare": "cpp",
    "complex": "cpp",
    "concepts": "cpp",
    "condition_variable": "cpp",
    "coroutine": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cuchar": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "forward_list": "cpp",
    "list": "cpp",
    "map": "cpp",
    "set": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "vector": "cpp",
    "exception": "cpp",
    "expected": "cpp",
    "algorithm": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "memory": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "source_location": "cpp",
    "string_view": "cpp",
    "system_error": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "utility": "cpp",
    "format": "cpp",
    "future": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "latch": "cpp",
    "limits": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "numbers": "cpp",
    "ranges": "cpp",
    "scoped_allocator": "cpp",
    "semaphore": "cpp",
    "shared_mutex": "cpp",
    "span": "cpp",
    "spanstream": "cpp",
    "stacktrace": "cpp",
    "stdexcept": "cpp",
    "stdfloat": "cpp",
    "stop_token": "cpp",
    "streambuf": "cpp",
    "syncstream": "cpp",
    "thread": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "valarray": "cpp",
    "variant": "cpp"
  },
  "cmake.configureOnOpen": true,
  "workbench.colorTheme": "Visual Studio Dark - C++",
  "editor.tabSize": 2,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.accessibilitySupport": "off",
  "typescript.updateImportsOnFileMove.enabled": "never",
  // material-icon-theme
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.folders.associations": {
    ".example": "Examples",
    "C++": "Cobol",
    "Problem": "Tasks",
    "Solved": "Resolver",
    "Failed": "Debug",
    "Unsolved": "Error"
  },
  // Todo highlight
  "todohighlight.isEnable": true,
  "todohighlight.include": [
    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.php",
    "**/*.css",
    "**/*.scss",
    "**/*.md",
    "**/*.java",
    "**/*.cpp"
  ],
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/dist/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map",
    "**/.next/**"
  ],
  "todohighlight.keywords": [],
  "html.format.extraLiners": "",
  "C_Cpp.clang_format_style": "{ BasedOnStyle: Google, UseTab: Never, IndentWidth: 2, TabWidth: 2, BreakBeforeBraces: Custom, BraceWrapping: { BeforeElse : true, BeforeWhile : true, BeforeCatch : true }, AllowShortIfStatementsOnASingleLine: AllIfsAndElse, IndentCaseLabels: false, ColumnLimit: 0, NamespaceIndentation: All, FixNamespaceComments: false, AccessModifierOffset: -1 }",
  // Terminal Setting
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": ["${env:windir}\\Sysnative\\cmd.exe", "${env:windir}\\System32\\cmd.exe"],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    // Integrate MSYS2 shell
    "MSYS2": {
      "path": "D:\\Program Files\\Msys64\\usr\\bin\\bash.exe",
      "args": ["--login", "-i"],
      "env": {
        "MSYSTEM": "MINGW64", // [MSYS (default) | MINGW32 | MINGW64] : set the MSYSTEM environment variable to select a MinGW toolchain.
        "CHERE_INVOKING": "1" // [0 | 1] : prevent a shell from doing a cd "${HOME}" = inhibit the working directory change from current directory
      }
    }
  },
  "terminal.integrated.automationProfile.windows": {
    "path": "D:\\Program Files\\Msys64\\usr\\bin\\bash.exe",
    "args": ["--login", "-i"],
    "env": {
      "MSYSTEM": "MINGW64", // [MSYS (default) | MINGW32 | MINGW64] : set the MSYSTEM environment variable to select a MinGW toolchain.
      "CHERE_INVOKING": "1" // [0 | 1] : prevent a shell from doing a cd "${HOME}" = inhibit the working directory change from current directory
    }
  },
  "terminal.integrated.defaultProfile.windows": "PowerShell"
}
