#include <bits/stdc++.h>

#ifndef ONLINE_JUDGE
  #define SET_IO(INPUT_DATA) \
    std::ios::sync_with_stdio(false); \
    std::cin.tie(nullptr); \
    std::cout.tie(nullptr); \
    std::istream* IO_S = (std::filesystem::exists(INPUT_DATA)) \
      ? (std::istream*) new std::ifstream(INPUT_DATA) \
      : (std::istream*) new std::stringstream(INPUT_DATA); \
    std::streambuf* IO_BACKUP = std::cin.rdbuf(IO_S->rdbuf())

  #define UNSET_IO() \
    std::cin.rdbuf(IO_BACKUP); \
    delete IO_S
    
#else
  #define SET_IO(INPUT_DATA) \
    std::ios::sync_with_stdio(false); \
    std::cin.tie(nullptr); \
    std::cout.tie(nullptr)

  #define UNSET_IO() ((void) 0)
#endif

using namespace std;

int main(int argc, char* argv[]) {
  SET_IO("_INPUT_.txt");

  int N;
  int answer;
  
  cin >> N;
  answer = 0;

  { // * MEMO 00
    /**
     * N 이다 라고 했을때, x C y 계산을 어떻게 해야하는가?
     * N 이 짝수이면 y 가 카운터 i 가 될꺼고 i 은 최대 N 이었을것, 또한 2씩 올라가야한다.
     * 1칸을 차지하는 세로블럭 1개의 수 V = i
     * 2칸을 차지하는 가로블럭 2개 묶음의 수 H = (N - i) / 2
     * H(n, r) = C(n + r - 1, r) = C(H + V, H)
     */
  }

  { // * MEMO 01
    /**
     * 시간초과
     */
  }

  { // * TASK 0: 루프 연산

    for (int i = N % 2; i <= N; i += 2) {
      int count = 0;
      int H = (N - i) / 2;
      int V = i;

      if (H == 0) {
        count = 1;
      }
      else {
        vector<int> data(H, 0);
        int size = 0;
  
        { // * TASK 0.0: 조합계산
          while (data[0] != H + V) {
            if (size == H) {
              count++;
              count %= 10007;
              cout << " - ";
              for (int i : data) {
                cout << i << ", ";
              }
              cout << "\b\b \n";
              size--;
              data[size]++;
              continue;
            }
  
            if (data[size] == H + V) {
              data[size] = 0;
              size--;
              data[size]++;
              continue;
            }
  
            if ((size != 0) && (data[size - 1] >= data[size])) {
              data[size]++;
              continue;
            }
  
            size++;
          }
        }
  
      }

      { // * LOG 00: 조합식 확인
        cout << H << " + " << V << " 에서 " << H << " 개를 뽑는 경우의 수: " << count << "\n\n";
      }

      answer += count;
      answer %= 10007;
    }
  }

  cout << "정답: " << answer;
  UNSET_IO();
  return 0;
}